basePath: /
definitions:
  dtos.CocktailDto:
    properties:
      id:
        type: integer
      imageUrl:
        type: string
      ingredients:
        items:
          $ref: '#/definitions/dtos.CocktailIngredientResultDto'
        type: array
      title:
        type: string
    type: object
  dtos.CocktailIngredientDto:
    properties:
      quantity:
        type: number
    type: object
  dtos.CocktailIngredientResultDto:
    properties:
      cocktailId:
        type: integer
      ingredie ntName:
        type: string
      ingredientId:
        type: integer
      quantity:
        type: number
    type: object
  dtos.CreateCocktailDto:
    properties:
      imageUrl:
        type: string
      title:
        type: string
    type: object
  dtos.IngredientDto:
    properties:
      name:
        type: string
    type: object
  dtos.IngredientResultDto:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
info:
  contact: {}
  description: An API to get cocktails and ingredients
  title: CocktailGrid API
  version: "1"
paths:
  /cocktails:
    get:
      consumes:
      - application/json
      description: Retrieves all available cocktails
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.CocktailDto'
      summary: Gets all cocktails
      tags:
      - Cocktails
    patch:
      consumes:
      - application/json
      description: Update an existing cocktail
      parameters:
      - description: Cocktail object
        in: body
        name: cocktail
        required: true
        schema:
          $ref: '#/definitions/dtos.CocktailDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dtos.CocktailDto'
      summary: Update a cocktail
      tags:
      - Cocktails
    post:
      consumes:
      - application/json
      description: Creates a new cocktail
      parameters:
      - description: Cocktail object
        in: body
        name: cocktail
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateCocktailDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dtos.CocktailDto'
      summary: Creates a cocktail
      tags:
      - Cocktails
  /cocktails/{cocktailId}/ingredients/{ingredientId}:
    delete:
      consumes:
      - application/json
      description: Deletes an ingredient from a cocktail
      parameters:
      - description: Cocktail ID
        in: path
        name: cocktailId
        required: true
        type: integer
      - description: Ingredient ID
        in: path
        name: ingredientId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/dtos.CocktailIngredientResultDto'
      summary: Deletes an ingredient from a cocktail
      tags:
      - Cocktails
    post:
      consumes:
      - application/json
      description: Adds an existing ingredient to the cocktail
      parameters:
      - description: Cocktail ID
        in: path
        name: cocktailId
        required: true
        type: integer
      - description: Ingredient ID
        in: path
        name: ingredientId
        required: true
        type: integer
      - description: Cocktail ingredient object
        in: body
        name: cocktail
        required: true
        schema:
          $ref: '#/definitions/dtos.CocktailIngredientDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dtos.CocktailIngredientResultDto'
      summary: Adds an ingredient
      tags:
      - Cocktails
  /ingredients:
    get:
      consumes:
      - application/json
      description: Retrieves all available ingredients
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.IngredientResultDto'
      summary: Get all ingredients
      tags:
      - Ingredients
    post:
      consumes:
      - application/json
      description: Creates a new ingredient
      parameters:
      - description: Ingredient object
        in: body
        name: cocktail
        required: true
        schema:
          $ref: '#/definitions/dtos.IngredientDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dtos.IngredientResultDto'
      summary: Creates an ingredient
      tags:
      - Ingredients
swagger: "2.0"
