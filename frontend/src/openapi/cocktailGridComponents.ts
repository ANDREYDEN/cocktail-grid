/**
 * Generated by @openapi-codegen
 *
 * @version 1
 */
import type * as Fetcher from "./cocktailGridFetcher";
import { cocktailGridFetch } from "./cocktailGridFetcher";
import type * as Schemas from "./cocktailGridSchemas";

export type GetCocktailsQueryParams = {
  /**
   * exclude ingredients
   */
  compact?: void;
};

export type GetCocktailsError = Fetcher.ErrorWrapper<undefined>;

export type GetCocktailsResponse = Schemas.VmsDetailedCocktailVm[];

export type GetCocktailsVariables = {
  queryParams?: GetCocktailsQueryParams;
};

/**
 * Retrieves all available cocktails
 */
export const getCocktails = (
  variables: GetCocktailsVariables,
  signal?: AbortSignal
) =>
  cocktailGridFetch<
    GetCocktailsResponse,
    GetCocktailsError,
    undefined,
    {},
    GetCocktailsQueryParams,
    {}
  >({ url: "/cocktails", method: "get", ...variables, signal });

export type CreateCocktailError = Fetcher.ErrorWrapper<undefined>;

/**
 * Creates a new cocktail
 */
export const createCocktail = (signal?: AbortSignal) =>
  cocktailGridFetch<
    Schemas.VmsCocktailVm,
    CreateCocktailError,
    undefined,
    {},
    {},
    {}
  >({ url: "/cocktails", method: "post", signal });

export type GetIngredientsError = Fetcher.ErrorWrapper<undefined>;

export type GetIngredientsResponse = Schemas.VmsIngredientVm[];

/**
 * Retrieves all available ingredients
 */
export const getIngredients = (signal?: AbortSignal) =>
  cocktailGridFetch<
    GetIngredientsResponse,
    GetIngredientsError,
    undefined,
    {},
    {},
    {}
  >({ url: "/ingredients", method: "get", signal });

export type CreateIngredientError = Fetcher.ErrorWrapper<undefined>;

/**
 * Creates a new ingredient
 */
export const createIngredient = (signal?: AbortSignal) =>
  cocktailGridFetch<
    Schemas.VmsIngredientVm,
    CreateIngredientError,
    undefined,
    {},
    {},
    {}
  >({ url: "/ingredients", method: "post", signal });

export const operationsByTag = {
  cocktails: { getCocktails, createCocktail },
  ingredients: { getIngredients, createIngredient },
};
